/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * TraderGUI.java
 *
 * Created on Apr 24, 2010, 6:38:47 PM
 */

package AlgoTrader;

import javax.swing.event.*;
import java.util.*;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.TableColumn;
import javax.swing.JComboBox;
import javax.swing.DefaultCellEditor;
import java.awt.event.*;
import javax.swing.table.TableModel;

import Configurer.*;
import InstrumentManager.*;


/**
 *
 * @author nik
 */
public class TraderGUI extends javax.swing.JFrame {

  private static Dispatcher mDisp = Dispatcher.getDispatcher();

//  static private TraderGUI mGUI = getTraderGUI();
  static private TraderGUI mGUI = null;

  public static TraderGUI getTraderGUI() {
  if (mGUI == null) {
    System.out.println("TraderGUI init");
    mGUI = new TraderGUI();
//      mGUI.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
    if(!mDisp.mNoGUI) {
      mGUI.setVisible(true);
      mGUI.jButtonExitAPI.setActionCommand("close");
      mGUI.jCheckBox_IB_Connect.setSelected(false);
//      mGUI.jButtonCloseAll.setActionCommand("close");
    }
  }
  return mGUI;
}

    /** Creates new form TraderGUI */
    public TraderGUI() {
      if(!mDisp.mNoGUI) {
        initComponents();
        jTable3AddComboBox();
        addListenersToTables();
      }
    }

    public void addListenersToTables() {
//      listen itself
     jTable2.getModel().addTableModelListener((TableModelListener)jTable2.getModel());
     jFinSecTable.getModel().addTableModelListener((TableModelListener)jFinSecTable.getModel());
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    jTabbedPane1 = new javax.swing.JTabbedPane();
    jPanelMAIN = new javax.swing.JPanel();
    jScrollPane2 = new javax.swing.JScrollPane();
    jTable2 = new javax.swing.JTable();
    jScrollPane3 = new javax.swing.JScrollPane();
    jFinSecTable = new javax.swing.JTable();
    jScrollPane1 = new javax.swing.JScrollPane();
    jPortfolioMonitorTable = new javax.swing.JTable();
    jPanelOptions = new javax.swing.JPanel();
    jScrollPane4 = new javax.swing.JScrollPane();
    jOptionsMonitorTable = new javax.swing.JTable();
    jPanel3 = new javax.swing.JPanel();
    jButtonExitAPI = new javax.swing.JButton();
    jCheckBox_IB_Connect = new javax.swing.JCheckBox();
    jTextField_IB_Status = new javax.swing.JTextField();
    jDebugger = new javax.swing.JTextField();

    setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

    jTable2.setModel(new AlgoParTable());
    jScrollPane2.setViewportView(jTable2);

    FinSecTable tbmodel = new FinSecTable(this);
    //tbmodel.setParent(this);
    jFinSecTable.setModel(tbmodel);
    jFinSecTable.getTableHeader().setReorderingAllowed(false);
    jScrollPane3.setViewportView(jFinSecTable);

    jPortfolioMonitorTable.setAutoCreateColumnsFromModel(false);
    PortfolioMonitorTableModel tblm = new PortfolioMonitorTableModel();
    jPortfolioMonitorTable.setModel(tblm);
    for (int k = 0; k < tblm.getColumnCount(); k++) {
      DefaultTableCellRenderer renderer = new DefaultTableCellRenderer();
      //  renderer
      //      .setHorizontalAlignment();
      TableColumn column = new TableColumn(k,
        tblm.getColumnWidth(k), renderer, null);
      jPortfolioMonitorTable.addColumn(column);
    }
    jScrollPane1.setViewportView(jPortfolioMonitorTable);

    javax.swing.GroupLayout jPanelMAINLayout = new javax.swing.GroupLayout(jPanelMAIN);
    jPanelMAIN.setLayout(jPanelMAINLayout);
    jPanelMAINLayout.setHorizontalGroup(
      jPanelMAINLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(jPanelMAINLayout.createSequentialGroup()
        .addContainerGap()
        .addGroup(jPanelMAINLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1094, Short.MAX_VALUE)
          .addGroup(jPanelMAINLayout.createSequentialGroup()
            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 348, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(18, 18, 18)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 728, Short.MAX_VALUE)))
        .addContainerGap())
    );
    jPanelMAINLayout.setVerticalGroup(
      jPanelMAINLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(jPanelMAINLayout.createSequentialGroup()
        .addContainerGap()
        .addGroup(jPanelMAINLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(jScrollPane2, 0, 0, Short.MAX_VALUE)
          .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addGap(18, 18, 18)
        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 209, Short.MAX_VALUE)
        .addContainerGap())
    );

    jTabbedPane1.addTab("MAIN", jPanelMAIN);

    jOptionsMonitorTable.setAutoCreateColumnsFromModel(false);
    OptionsMonitorTableModel otblm = new OptionsMonitorTableModel();
    jOptionsMonitorTable.setModel(otblm
    );
    for (int k = 0; k < otblm.getColumnCount(); k++) {
      DefaultTableCellRenderer renderer = new DefaultTableCellRenderer();
      //  renderer
      //      .setHorizontalAlignment();
      TableColumn column = new TableColumn(k,
        otblm.getColumnWidth(k), renderer, null);
      jOptionsMonitorTable.addColumn(column);
    }
    jScrollPane4.setViewportView(jOptionsMonitorTable);

    javax.swing.GroupLayout jPanelOptionsLayout = new javax.swing.GroupLayout(jPanelOptions);
    jPanelOptions.setLayout(jPanelOptionsLayout);
    jPanelOptionsLayout.setHorizontalGroup(
      jPanelOptionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(jPanelOptionsLayout.createSequentialGroup()
        .addContainerGap()
        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 987, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addContainerGap(117, Short.MAX_VALUE))
    );
    jPanelOptionsLayout.setVerticalGroup(
      jPanelOptionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(jPanelOptionsLayout.createSequentialGroup()
        .addContainerGap()
        .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 385, Short.MAX_VALUE)
        .addContainerGap())
    );

    jTabbedPane1.addTab("OPTS", jPanelOptions);

    javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
    jPanel3.setLayout(jPanel3Layout);
    jPanel3Layout.setHorizontalGroup(
      jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGap(0, 1114, Short.MAX_VALUE)
    );
    jPanel3Layout.setVerticalGroup(
      jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGap(0, 407, Short.MAX_VALUE)
    );

    jTabbedPane1.addTab("AUX", jPanel3);

    jButtonExitAPI.setText("EXIT API");
    jButtonExitAPI.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jButtonExitAPIActionPerformed(evt);
      }
    });

    jCheckBox_IB_Connect.setText("IB Connect");
    jCheckBox_IB_Connect.addItemListener(new java.awt.event.ItemListener() {
      public void itemStateChanged(java.awt.event.ItemEvent evt) {
        jCheckBox_IB_ConnectItemStateChanged(evt);
      }
    });

    jTextField_IB_Status.setBackground(new java.awt.Color(255, 0, 0));
    jTextField_IB_Status.setText("IB (s): 5");

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addGap(37, 37, 37)
        .addComponent(jCheckBox_IB_Connect)
        .addGap(18, 18, 18)
        .addComponent(jTextField_IB_Status, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addGap(178, 178, 178)
        .addComponent(jDebugger, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 288, Short.MAX_VALUE)
        .addComponent(jButtonExitAPI)
        .addGap(76, 76, 76))
      .addGroup(layout.createSequentialGroup()
        .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1119, Short.MAX_VALUE)
        .addContainerGap())
    );
    layout.setVerticalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
        .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 432, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(jCheckBox_IB_Connect)
          .addComponent(jTextField_IB_Status, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(jButtonExitAPI)
          .addComponent(jDebugger, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addContainerGap())
    );

    pack();
  }// </editor-fold>//GEN-END:initComponents

    private void jButtonExitAPIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonExitAPIActionPerformed
      // TODO add your handling code here:
      if (evt.getActionCommand().equalsIgnoreCase("close")) {
        System.out.println("close");System.out.flush();
        closeALL();
      }

    }//GEN-LAST:event_jButtonExitAPIActionPerformed

      public static void closeALL() {
        if (mDisp.mIB != null) {
          System.out.print(" IB");
          mDisp.mIB.Disconnect();
        }
        try {Thread.sleep(1000);
        } catch (Exception ex) {};
        System.exit(0);
      }

    
    private void jCheckBox_IB_ConnectItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox_IB_ConnectItemStateChanged
      // TODO add your handling code here:
      if(evt.getStateChange()==java.awt.event.ItemEvent.DESELECTED) {
      IBLink.IBLink.getIBLink().Disconnect();
        System.out.println("disconnect");
      } else if (evt.getStateChange() == java.awt.event.ItemEvent.SELECTED) {
      IBLink.IBLink.getIBLink().Connect(mDisp.mRTFeed);
        System.out.println("connect");
      }
    }//GEN-LAST:event_jCheckBox_IB_ConnectItemStateChanged

    /** updates jTextField_IB_Status in accordance to IB-status */
    /**
     * Check connection to IB. This is needed to not spoil the GUI
     * @param mlss milliseconds (?)
     * @param dwnLevel lower bound of time window
     * @param upLevel upper bound of time window
     */
    public void setStatusToIB_Control(long mlss, long dwnLevel, long upLevel) {
      double shift = 0.0d;
      double scale = 0.0d;
      if(upLevel>dwnLevel) {
        shift = dwnLevel;
        scale = upLevel-dwnLevel;
      } else if(upLevel<dwnLevel) {
        shift = upLevel;
        scale = dwnLevel-upLevel;
      } else {
        shift = dwnLevel;
        scale = 200;
      }
      double x = JNums.Funcs.linear_sigmoid_zero((double)mlss/1000, shift, scale);
      if(x<0.5) {
//        System.out.println("setBkg: x: " + x + " [" + (int)Math.round(Math.min(x, 1d)*510) + ",255,0]");
        jTextField_IB_Status.setBackground(new java.awt.Color((int)Math.round(x*510),255, 0));
      } else if(x>=0.5) {
//        System.out.println("setBkg: x: " + x + " [255," + (int)Math.round((Math.max(x, 0d)-0.5)*510) + ",0]");
        jTextField_IB_Status.setBackground(new java.awt.Color(255,(int)Math.round((x-0.5)*510),0));
      }
      jTextField_IB_Status.setText("IB (s): " + ((float)mlss/1000d));
    }

    public void setDebuggerText(String msg) {
      jDebugger.setText(msg);
    }

    private void jTable3AddComboBox() {
      TableColumn feedColumn = jFinSecTable.getColumnModel().getColumn(1);
      JComboBox comboBox = new JComboBox();
      FinSecTable.FeedTypes[] vals = FinSecTable.FeedTypes.values();
      int ntypes = vals.length;
      for(int k=0;k<ntypes;k++) {
        comboBox.addItem(vals[k].name());
      }
      feedColumn.setCellEditor(new DefaultCellEditor(comboBox));
    }

    public javax.swing.JTable getPortfolioMonitorTable() {
      return jPortfolioMonitorTable;
    }
    public javax.swing.JTable getOptionsMonitorTable() {
      return jOptionsMonitorTable;
    }

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                mGUI = new TraderGUI();
                mGUI.setVisible(true);
                mGUI.jButtonExitAPI.setActionCommand("close");
                mGUI.jCheckBox_IB_Connect.setSelected(false);
            }
        });
    }

  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JButton jButtonExitAPI;
  private javax.swing.JCheckBox jCheckBox_IB_Connect;
  private javax.swing.JTextField jDebugger;
  private javax.swing.JTable jFinSecTable;
  private javax.swing.JTable jOptionsMonitorTable;
  private javax.swing.JPanel jPanel3;
  private javax.swing.JPanel jPanelMAIN;
  private javax.swing.JPanel jPanelOptions;
  private javax.swing.JTable jPortfolioMonitorTable;
  private javax.swing.JScrollPane jScrollPane1;
  private javax.swing.JScrollPane jScrollPane2;
  private javax.swing.JScrollPane jScrollPane3;
  private javax.swing.JScrollPane jScrollPane4;
  private javax.swing.JTabbedPane jTabbedPane1;
  private javax.swing.JTable jTable2;
  private javax.swing.JTextField jTextField_IB_Status;
  // End of variables declaration//GEN-END:variables

}
